[2023-07-22 05:56:24,910] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 0 for 1 partitions (state.change.logger)
[2023-07-22 05:56:25,506] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 10 from controller 0 epoch 1 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-07-22 05:56:26,800] INFO [Broker id=1] Leader flight-0 with topic id Some(O-Me_MRrRZOaCd-UJo4ahA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-07-22 05:56:26,961] INFO [Broker id=1] Finished LeaderAndIsr request in 2080ms correlationId 10 from controller 0 for 1 partitions (state.change.logger)
[2023-07-22 05:56:27,340] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 11 (state.change.logger)
[2023-07-22 05:57:54,851] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 12 from controller 0 for 5 partitions (state.change.logger)
[2023-07-22 05:57:54,883] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 12 from controller 0 epoch 1 as part of the become-leader transition for 3 partitions (state.change.logger)
[2023-07-22 05:57:54,909] INFO [Broker id=1] Leader schedules-0 with topic id Some(Yn3jF96zRJKjWGm3LKRVVQ) starts at leader epoch 1 from offset 59 with partition epoch 1, high watermark 59, ISR [1,2], adding replicas [] and removing replicas []. Previous leader epoch was 0. (state.change.logger)
[2023-07-22 05:57:54,933] INFO [Broker id=1] Leader flight_info-2 with topic id Some(HuL1Ps__TsyLs1Nmk7Qy_Q) starts at leader epoch 1 from offset 24 with partition epoch 1, high watermark 24, ISR [1,2], adding replicas [] and removing replicas []. Previous leader epoch was 0. (state.change.logger)
[2023-07-22 05:57:54,937] INFO [Broker id=1] Leader flights-3 with topic id Some(Sg_VygqJS26ZMt4p5o_j_A) starts at leader epoch 1 from offset 5 with partition epoch 1, high watermark 5, ISR [1,2], adding replicas [] and removing replicas []. Previous leader epoch was 0. (state.change.logger)
[2023-07-22 05:57:54,962] INFO [Broker id=1] Follower schedules-3 starts at leader epoch 1 from offset 61 with partition epoch 1 and high watermark 61. Current leader is 2. Previous leader epoch was 0. (state.change.logger)
[2023-07-22 05:57:54,962] INFO [Broker id=1] Follower flights-0 starts at leader epoch 1 from offset 6 with partition epoch 1 and high watermark 6. Current leader is 2. Previous leader epoch was 0. (state.change.logger)
[2023-07-22 05:57:54,979] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 0 epoch 1 with correlation id 12 for 2 partitions (state.change.logger)
[2023-07-22 05:57:55,228] INFO [Broker id=1] Finished LeaderAndIsr request in 377ms correlationId 12 from controller 0 for 5 partitions (state.change.logger)
[2023-07-22 05:57:55,236] INFO [Broker id=1] Add 5 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 13 (state.change.logger)
[2023-07-22 05:57:55,599] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 14 from controller 0 for 10 partitions (state.change.logger)
[2023-07-22 05:57:55,600] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 14 from controller 0 epoch 1 as part of the become-leader transition for 4 partitions (state.change.logger)
[2023-07-22 05:57:55,602] INFO [Broker id=1] Leader schedules-2 with topic id Some(Yn3jF96zRJKjWGm3LKRVVQ) starts at leader epoch 1 from offset 55 with partition epoch 1, high watermark 55, ISR [1,2], adding replicas [] and removing replicas []. Previous leader epoch was 0. (state.change.logger)
[2023-07-22 05:57:55,606] INFO [Broker id=1] Leader flight_info-1 with topic id Some(HuL1Ps__TsyLs1Nmk7Qy_Q) starts at leader epoch 1 from offset 22 with partition epoch 1, high watermark 22, ISR [1,2], adding replicas [] and removing replicas []. Previous leader epoch was 0. (state.change.logger)
[2023-07-22 05:57:55,609] INFO [Broker id=1] Leader flights-2 with topic id Some(Sg_VygqJS26ZMt4p5o_j_A) starts at leader epoch 1 from offset 10 with partition epoch 1, high watermark 10, ISR [1,2], adding replicas [] and removing replicas []. Previous leader epoch was 0. (state.change.logger)
[2023-07-22 05:57:55,612] INFO [Broker id=1] Leader flight_info-4 with topic id Some(HuL1Ps__TsyLs1Nmk7Qy_Q) starts at leader epoch 1 from offset 23 with partition epoch 1, high watermark 23, ISR [1,2], adding replicas [] and removing replicas []. Previous leader epoch was 0. (state.change.logger)
[2023-07-22 05:57:55,615] INFO [Broker id=1] Follower schedules-4 starts at leader epoch 1 from offset 62 with partition epoch 1 and high watermark 62. Current leader is 2. Previous leader epoch was 0. (state.change.logger)
[2023-07-22 05:57:55,615] INFO [Broker id=1] Follower flight_info-3 starts at leader epoch 1 from offset 25 with partition epoch 1 and high watermark 25. Current leader is 2. Previous leader epoch was 0. (state.change.logger)
[2023-07-22 05:57:55,615] INFO [Broker id=1] Follower schedules-1 starts at leader epoch 1 from offset 58 with partition epoch 1 and high watermark 58. Current leader is 2. Previous leader epoch was 0. (state.change.logger)
[2023-07-22 05:57:55,615] INFO [Broker id=1] Follower flight_info-0 starts at leader epoch 1 from offset 19 with partition epoch 1 and high watermark 19. Current leader is 2. Previous leader epoch was 0. (state.change.logger)
[2023-07-22 05:57:55,615] INFO [Broker id=1] Follower flights-4 starts at leader epoch 1 from offset 6 with partition epoch 1 and high watermark 6. Current leader is 2. Previous leader epoch was 0. (state.change.logger)
[2023-07-22 05:57:55,615] INFO [Broker id=1] Follower flights-1 starts at leader epoch 1 from offset 11 with partition epoch 1 and high watermark 11. Current leader is 2. Previous leader epoch was 0. (state.change.logger)
[2023-07-22 05:57:55,622] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 0 epoch 1 with correlation id 14 for 6 partitions (state.change.logger)
[2023-07-22 05:57:55,635] INFO [Broker id=1] Finished LeaderAndIsr request in 35ms correlationId 14 from controller 0 for 10 partitions (state.change.logger)
[2023-07-22 05:57:55,643] INFO [Broker id=1] Add 10 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 15 (state.change.logger)
[2023-07-22 05:57:59,445] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 0 partitions (state.change.logger)
[2023-07-22 05:57:59,649] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 25 become-leader and 8 become-follower partitions (state.change.logger)
[2023-07-22 05:57:59,657] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 33 partitions (state.change.logger)
[2023-07-22 05:57:59,659] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 2 with 24 become-leader and 7 become-follower partitions (state.change.logger)
[2023-07-22 05:57:59,665] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 49 partitions (state.change.logger)
[2023-07-22 05:57:59,665] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition flight-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,665] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition flight_info-3 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition flight_info-1 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition flight_info-4 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition flight_info-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition flight_info-2 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition schedules-2 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition schedules-4 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition schedules-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition schedules-3 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition schedules-1 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition flights-1 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition flights-3 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition flights-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition flights-2 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition flights-4 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-15 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-48 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-9 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-42 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-21 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-30 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-3 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-36 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-45 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-12 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-24 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-18 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-27 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-39 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-6 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,666] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-33 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,669] INFO [Broker id=1] Finished LeaderAndIsr request in 12ms correlationId 1 from controller 1 for 33 partitions (state.change.logger)
[2023-07-22 05:57:59,684] INFO [Broker id=1] Add 49 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-07-22 05:57:59,864] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-22 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,868] INFO [Controller id=1 epoch=2] Partition schedules-2 state changed to (Leader:1,ISR:1,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,869] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-4 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,870] INFO [Controller id=1 epoch=2] Partition flight_info-4 state changed to (Leader:1,ISR:1,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,870] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-49 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,870] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-31 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,870] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-37 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,870] INFO [Controller id=1 epoch=2] Partition flight_info-3 state changed to (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,870] INFO [Controller id=1 epoch=2] Partition flights-4 state changed to (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,870] INFO [Controller id=1 epoch=2] Partition schedules-0 state changed to (Leader:1,ISR:1,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,871] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-13 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,871] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-43 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,871] INFO [Controller id=1 epoch=2] Partition flight_info-1 state changed to (Leader:1,ISR:1,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,871] INFO [Controller id=1 epoch=2] Partition flights-2 state changed to (Leader:1,ISR:1,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,872] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-34 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,872] INFO [Controller id=1 epoch=2] Partition schedules-4 state changed to (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,873] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-7 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,873] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-46 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,873] INFO [Controller id=1 epoch=2] Partition flights-0 state changed to (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,873] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-25 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,873] INFO [Controller id=1 epoch=2] Partition schedules-3 state changed to (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,873] INFO [Controller id=1 epoch=2] Partition flight_info-0 state changed to (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,873] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-16 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,873] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-28 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,874] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-19 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,874] INFO [Controller id=1 epoch=2] Partition flights-3 state changed to (Leader:1,ISR:1,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,874] INFO [Controller id=1 epoch=2] Partition flight_info-2 state changed to (Leader:1,ISR:1,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,875] INFO [Controller id=1 epoch=2] Partition schedules-1 state changed to (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,875] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-1 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,875] INFO [Controller id=1 epoch=2] Partition flights-1 state changed to (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,880] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-10 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,880] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-40 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:57:59,885] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 7 become-leader and 8 become-follower partitions (state.change.logger)
[2023-07-22 05:57:59,886] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 for 15 partitions (state.change.logger)
[2023-07-22 05:57:59,886] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 2 with 8 become-leader and 7 become-follower partitions (state.change.logger)
[2023-07-22 05:57:59,887] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 2 for partition flight_info-3 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,887] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 2 for partition flight_info-4 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,888] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 2 for partition flight_info-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,891] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 2 for partition flight_info-1 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,892] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 2 for partition flight_info-2 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,893] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 2 for partition schedules-2 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,893] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 2 for partition schedules-3 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,893] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 2 for partition schedules-4 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,893] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 2 for partition schedules-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,893] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 2 for partition schedules-1 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,893] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 2 for partition flights-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,893] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 2 for partition flights-1 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,894] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 2 for partition flights-2 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,894] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 2 for partition flights-3 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,894] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 2 for partition flights-4 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-07-22 05:57:59,894] INFO [Broker id=1] Finished LeaderAndIsr request in 8ms correlationId 3 from controller 1 for 15 partitions (state.change.logger)
[2023-07-22 05:57:59,887] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 32 partitions (state.change.logger)
[2023-07-22 05:57:59,905] INFO [Broker id=1] Add 32 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-22 05:58:00,065] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-22 05:58:00,067] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-22 05:58:00,068] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-22 05:58:00,070] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-22 05:58:00,070] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-22 05:58:00,070] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-22 05:58:00,071] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-22 05:58:00,071] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-22 05:58:00,072] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-22 05:58:00,072] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-22 05:58:00,073] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-22 05:58:00,073] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-22 05:58:00,073] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-22 05:58:00,073] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-22 05:58:00,074] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-22 05:58:00,074] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-22 05:58:00,074] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-22 05:58:00,075] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-07-22 05:58:01,038] INFO [Controller id=1 epoch=2] Changed partition schedules-2 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-07-22 05:58:01,038] INFO [Controller id=1 epoch=2] Changed partition flight_info-4 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-07-22 05:58:01,038] INFO [Controller id=1 epoch=2] Changed partition schedules-0 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-07-22 05:58:01,038] INFO [Controller id=1 epoch=2] Changed partition flights-3 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-07-22 05:58:01,038] INFO [Controller id=1 epoch=2] Changed partition flight_info-1 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-07-22 05:58:01,038] INFO [Controller id=1 epoch=2] Changed partition flights-2 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-07-22 05:58:01,038] INFO [Controller id=1 epoch=2] Changed partition flight_info-2 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-07-22 05:58:01,038] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 7 become-follower partitions (state.change.logger)
[2023-07-22 05:58:01,039] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 for 7 partitions (state.change.logger)
[2023-07-22 05:58:01,039] INFO [Broker id=1] Follower schedules-0 starts at leader epoch 2 from offset 59 with partition epoch 2 and high watermark 59. Current leader is 2. Previous leader epoch was 1. (state.change.logger)
[2023-07-22 05:58:01,039] INFO [Broker id=1] Follower flight_info-2 starts at leader epoch 2 from offset 24 with partition epoch 2 and high watermark 24. Current leader is 2. Previous leader epoch was 1. (state.change.logger)
[2023-07-22 05:58:01,039] INFO [Broker id=1] Follower schedules-2 starts at leader epoch 2 from offset 55 with partition epoch 2 and high watermark 55. Current leader is 2. Previous leader epoch was 1. (state.change.logger)
[2023-07-22 05:58:01,039] INFO [Broker id=1] Follower flight_info-1 starts at leader epoch 2 from offset 22 with partition epoch 2 and high watermark 22. Current leader is 2. Previous leader epoch was 1. (state.change.logger)
[2023-07-22 05:58:01,039] INFO [Broker id=1] Follower flights-3 starts at leader epoch 2 from offset 5 with partition epoch 2 and high watermark 5. Current leader is 2. Previous leader epoch was 1. (state.change.logger)
[2023-07-22 05:58:01,039] INFO [Broker id=1] Follower flights-2 starts at leader epoch 2 from offset 10 with partition epoch 2 and high watermark 10. Current leader is 2. Previous leader epoch was 1. (state.change.logger)
[2023-07-22 05:58:01,039] INFO [Broker id=1] Follower flight_info-4 starts at leader epoch 2 from offset 23 with partition epoch 2 and high watermark 23. Current leader is 2. Previous leader epoch was 1. (state.change.logger)
[2023-07-22 05:58:01,039] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 5 for 7 partitions (state.change.logger)
[2023-07-22 05:58:01,045] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 2 with 7 become-leader and 0 become-follower partitions (state.change.logger)
[2023-07-22 05:58:01,057] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 7 partitions (state.change.logger)
[2023-07-22 05:58:01,085] INFO [Broker id=1] Finished LeaderAndIsr request in 46ms correlationId 5 from controller 1 for 7 partitions (state.change.logger)
[2023-07-22 05:58:01,090] INFO [Broker id=1] Add 7 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 6 (state.change.logger)
[2023-07-22 05:58:01,091] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-07-22 05:58:01,119] INFO [Controller id=1 epoch=2] Sending StopReplica request for 8 replicas to broker 1 (state.change.logger)
[2023-07-22 05:58:01,128] INFO [Broker id=1] Handling StopReplica request correlationId 7 from controller 1 for 8 partitions (state.change.logger)
[2023-07-22 05:58:01,174] INFO [Controller id=1 epoch=2] Partition flights-0 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:58:01,175] INFO [Controller id=1 epoch=2] Partition flight_info-3 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:58:01,176] INFO [Controller id=1 epoch=2] Partition flights-4 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:58:01,183] INFO [Controller id=1 epoch=2] Partition schedules-1 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:58:01,184] INFO [Controller id=1 epoch=2] Partition flights-1 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:58:01,184] INFO [Controller id=1 epoch=2] Partition schedules-4 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:58:01,185] INFO [Controller id=1 epoch=2] Partition schedules-3 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:58:01,185] INFO [Controller id=1 epoch=2] Partition flight_info-0 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-07-22 05:58:01,187] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 2 with 8 become-leader and 0 become-follower partitions (state.change.logger)
[2023-07-22 05:58:01,193] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 8 partitions (state.change.logger)
[2023-07-22 05:58:01,194] INFO [Controller id=1 epoch=2] Sending StopReplica request for 8 replicas to broker 1 (state.change.logger)
[2023-07-22 05:58:01,195] INFO [Broker id=1] Add 8 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2023-07-22 05:58:01,210] INFO [Broker id=1] Handling StopReplica request correlationId 9 from controller 1 for 8 partitions (state.change.logger)
