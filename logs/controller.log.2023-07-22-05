[2023-07-22 05:57:57,874] DEBUG [Controller id=2] Broker 1 was elected as controller instead of broker 2 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2023-07-22 05:58:02,219] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2023-07-22 05:58:02,244] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2023-07-22 05:58:02,273] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-07-22 05:58:02,316] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-07-22 05:58:02,321] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2023-07-22 05:58:02,415] INFO [Controller id=2] Initialized broker epochs cache: HashMap(2 -> 61) (kafka.controller.KafkaController)
[2023-07-22 05:58:02,652] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2023-07-22 05:58:02,814] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-07-22 05:58:02,860] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2023-07-22 05:58:02,861] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-22 05:58:02,861] INFO [Controller id=2] Current list of topics in the cluster: HashSet(flight, flight_info, schedules, flights, __consumer_offsets) (kafka.controller.KafkaController)
[2023-07-22 05:58:02,861] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-07-22 05:58:02,863] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2023-07-22 05:58:02,888] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-07-22 05:58:02,890] INFO [Controller id=2] List of topics ineligible for deletion: flight,flights,__consumer_offsets,flight_info,schedules (kafka.controller.KafkaController)
[2023-07-22 05:58:02,890] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-07-22 05:58:02,898] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(flight, flights, __consumer_offsets, flight_info, schedules) (kafka.controller.TopicDeletionManager)
[2023-07-22 05:58:02,900] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2023-07-22 05:58:02,938] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-07-22 05:58:02,944] INFO [RequestSendThread controllerId=2] Controller 2 connected to abdelhak:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-22 05:58:02,966] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-22 05:58:03,288] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-22 05:58:03,781] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=flight_info,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OfflineReplica, [Topic=schedules,Partition=4,Replica=2] -> OnlineReplica, [Topic=flight_info,Partition=3,Replica=2] -> OnlineReplica, [Topic=schedules,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OnlineReplica, [Topic=flight_info,Partition=3,Replica=1] -> OfflineReplica, [Topic=flight_info,Partition=1,Replica=1] -> OfflineReplica, [Topic=flight_info,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OnlineReplica, [Topic=schedules,Partition=3,Replica=2] -> OnlineReplica, [Topic=flight_info,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OfflineReplica, [Topic=flights,Partition=2,Replica=2] -> OnlineReplica, [Topic=schedules,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OfflineReplica, [Topic=flight_info,Partition=2,Replica=0] -> OfflineReplica, [Topic=flights,Partition=2,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OfflineReplica, [Topic=flight_info,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OfflineReplica, [Topic=flight_info,Partition=0,Replica=0] -> OfflineReplica, [Topic=flights,Partition=4,Replica=1] -> OfflineReplica, [Topic=flight_info,Partition=4,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OnlineReplica, [Topic=flight_info,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OfflineReplica, [Topic=schedules,Partition=0,Replica=0] -> OfflineReplica, [Topic=schedules,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OfflineReplica, [Topic=flight,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OfflineReplica, [Topic=flights,Partition=1,Replica=1] -> OfflineReplica, [Topic=flights,Partition=1,Replica=2] -> OnlineReplica, [Topic=schedules,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OfflineReplica, [Topic=schedules,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OnlineReplica, [Topic=schedules,Partition=4,Replica=0] -> OfflineReplica, [Topic=flight_info,Partition=4,Replica=2] -> OnlineReplica, [Topic=schedules,Partition=4,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OfflineReplica, [Topic=flights,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OfflineReplica, [Topic=flights,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OfflineReplica, [Topic=flight_info,Partition=2,Replica=2] -> OnlineReplica, [Topic=schedules,Partition=1,Replica=1] -> OfflineReplica, [Topic=flights,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OnlineReplica, [Topic=schedules,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OnlineReplica, [Topic=flights,Partition=0,Replica=1] -> OfflineReplica, [Topic=flights,Partition=1,Replica=0] -> OfflineReplica, [Topic=schedules,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OfflineReplica, [Topic=flights,Partition=3,Replica=1] -> OfflineReplica, [Topic=flights,Partition=3,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OfflineReplica, [Topic=flight_info,Partition=4,Replica=0] -> OfflineReplica, [Topic=flights,Partition=2,Replica=1] -> OfflineReplica, [Topic=flights,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OfflineReplica, [Topic=flight_info,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OnlineReplica, [Topic=schedules,Partition=0,Replica=1] -> OfflineReplica, [Topic=schedules,Partition=2,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OfflineReplica, [Topic=flights,Partition=4,Replica=2] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-07-22 05:58:03,784] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-07-22 05:58:03,791] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-07-22 05:58:03,984] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(flight-0 -> OfflinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, flight_info-3 -> OnlinePartition, schedules-4 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, schedules-0 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, flights-1 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, schedules-3 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OfflinePartition, flight_info-2 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, flights-0 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, flights-4 -> OnlinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OfflinePartition, schedules-2 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, flight_info-1 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, flights-3 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, flight_info-4 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, flight_info-0 -> OnlinePartition, schedules-1 -> OnlinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, flights-2 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-07-22 05:58:03,991] INFO [Controller id=2] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2023-07-22 05:58:03,995] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-07-22 05:58:03,995] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-07-22 05:58:03,996] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-07-22 05:58:03,996] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-07-22 05:58:03,998] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-07-22 05:58:04,019] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-07-22 05:58:04,037] INFO [Controller id=2] Shutting down broker 2 (kafka.controller.KafkaController)
[2023-07-22 05:58:04,037] DEBUG [Controller id=2] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2023-07-22 05:58:04,037] DEBUG [Controller id=2] Live brokers:  (kafka.controller.KafkaController)
[2023-07-22 05:58:04,097] TRACE [Controller id=2] All leaders = flight-0 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-13 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-42 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-17 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),flight_info-3 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),schedules-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),schedules-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),flights-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-12 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),schedules-3 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),flight_info-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),flights-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),flights-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-15 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-48 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),schedules-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),flight_info-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-36 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),flights-3 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),flight_info-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),flight_info-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),schedules-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-39 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-6 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),flights-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-07-22 05:58:09,022] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-22 05:58:09,023] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-22 05:58:09,035] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-22 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-49 -> List(0), schedules-3 -> List(0, 2, 1), __consumer_offsets-31 -> List(0), __consumer_offsets-37 -> List(0), schedules-0 -> List(0, 1, 2), __consumer_offsets-13 -> List(0), __consumer_offsets-43 -> List(0), flight_info-2 -> List(0, 1, 2), __consumer_offsets-1 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-46 -> List(0), flights-0 -> List(0, 2, 1), __consumer_offsets-25 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-19 -> List(0), flights-3 -> List(0, 1, 2), __consumer_offsets-10 -> List(0), __consumer_offsets-40 -> List(0)) (kafka.controller.KafkaController)
[2023-07-22 05:58:09,043] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2023-07-22 05:58:09,048] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-22 05:58:09,049] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-21 -> List(1), flight_info-4 -> List(1, 0, 2), __consumer_offsets-33 -> List(1), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), flight-0 -> List(1), flight_info-1 -> List(1, 2, 0), __consumer_offsets-45 -> List(1), __consumer_offsets-30 -> List(1), schedules-2 -> List(1, 2, 0), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-0 -> List(1), flights-2 -> List(1, 0, 2), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)) (kafka.controller.KafkaController)
[2023-07-22 05:58:09,049] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2023-07-22 05:58:09,050] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-22 05:58:09,050] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-22 05:58:09,050] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-22 05:58:09,118] INFO [Controller id=2] Shutting down broker 2 (kafka.controller.KafkaController)
[2023-07-22 05:58:09,118] DEBUG [Controller id=2] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2023-07-22 05:58:09,118] DEBUG [Controller id=2] Live brokers:  (kafka.controller.KafkaController)
[2023-07-22 05:58:09,147] TRACE [Controller id=2] All leaders = flight-0 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-13 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-42 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-17 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),flight_info-3 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),schedules-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),schedules-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),flights-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-12 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),schedules-3 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),flight_info-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),flights-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),flights-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-15 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-48 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),schedules-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),flight_info-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-36 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),flights-3 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),flight_info-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),flight_info-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),schedules-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-39 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-6 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),flights-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-07-22 05:58:14,151] INFO [Controller id=2] Shutting down broker 2 (kafka.controller.KafkaController)
[2023-07-22 05:58:14,151] DEBUG [Controller id=2] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2023-07-22 05:58:14,151] DEBUG [Controller id=2] Live brokers:  (kafka.controller.KafkaController)
[2023-07-22 05:58:14,172] TRACE [Controller id=2] All leaders = flight-0 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-13 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-42 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-17 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),flight_info-3 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),schedules-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),schedules-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),flights-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-12 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),schedules-3 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),flight_info-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),flights-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),flights-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-15 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-48 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),schedules-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),flight_info-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-36 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),flights-3 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),flight_info-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),flight_info-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),schedules-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-39 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-6 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),flights-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-07-22 05:58:14,905] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-22 05:58:14,906] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-22 05:58:14,911] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-22 05:58:14,913] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2023-07-22 05:58:14,914] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2023-07-22 05:58:14,916] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-07-22 05:58:14,919] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-07-22 05:58:14,921] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2023-07-22 05:58:14,922] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2023-07-22 05:58:14,927] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2023-07-22 05:58:14,941] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2023-07-22 05:58:16,522] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-22 05:58:16,627] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2023-07-22 05:58:16,632] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-07-22 05:58:16,683] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-07-22 05:58:16,705] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-07-22 05:58:16,717] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-07-22 05:58:16,823] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 319) (kafka.controller.KafkaController)
[2023-07-22 05:58:16,936] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-07-22 05:58:17,227] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-07-22 05:58:17,266] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-07-22 05:58:17,269] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-07-22 05:58:17,279] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-22 05:58:17,279] INFO [Controller id=0] Current list of topics in the cluster: HashSet(flight, flight_info, schedules, flights, __consumer_offsets) (kafka.controller.KafkaController)
[2023-07-22 05:58:17,279] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-07-22 05:58:17,288] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-07-22 05:58:17,293] INFO [Controller id=0] List of topics ineligible for deletion: flight,flights,__consumer_offsets,flight_info,schedules (kafka.controller.KafkaController)
[2023-07-22 05:58:17,293] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-07-22 05:58:17,294] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(flight, flights, __consumer_offsets, flight_info, schedules) (kafka.controller.TopicDeletionManager)
[2023-07-22 05:58:17,295] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-07-22 05:58:17,347] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-07-22 05:58:17,357] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-22 05:58:17,423] INFO [RequestSendThread controllerId=0] Controller 0 connected to abdelhak:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-22 05:58:17,574] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-22 05:58:17,987] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=flight_info,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=schedules,Partition=4,Replica=2] -> OfflineReplica, [Topic=flight_info,Partition=3,Replica=2] -> OfflineReplica, [Topic=schedules,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=flight_info,Partition=3,Replica=1] -> OfflineReplica, [Topic=flight_info,Partition=1,Replica=1] -> OfflineReplica, [Topic=flight_info,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=schedules,Partition=3,Replica=2] -> OfflineReplica, [Topic=flight_info,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OfflineReplica, [Topic=flights,Partition=2,Replica=2] -> OfflineReplica, [Topic=schedules,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OfflineReplica, [Topic=flight_info,Partition=2,Replica=0] -> OnlineReplica, [Topic=flights,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=flight_info,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OfflineReplica, [Topic=flight_info,Partition=0,Replica=0] -> OnlineReplica, [Topic=flights,Partition=4,Replica=1] -> OfflineReplica, [Topic=flight_info,Partition=4,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=flight_info,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=schedules,Partition=0,Replica=0] -> OnlineReplica, [Topic=schedules,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OfflineReplica, [Topic=flight,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=flights,Partition=1,Replica=1] -> OfflineReplica, [Topic=flights,Partition=1,Replica=2] -> OfflineReplica, [Topic=schedules,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OfflineReplica, [Topic=schedules,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=schedules,Partition=4,Replica=0] -> OnlineReplica, [Topic=flight_info,Partition=4,Replica=2] -> OfflineReplica, [Topic=schedules,Partition=4,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=flights,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OfflineReplica, [Topic=flights,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OfflineReplica, [Topic=flight_info,Partition=2,Replica=2] -> OfflineReplica, [Topic=schedules,Partition=1,Replica=1] -> OfflineReplica, [Topic=flights,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=schedules,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=flights,Partition=0,Replica=1] -> OfflineReplica, [Topic=flights,Partition=1,Replica=0] -> OnlineReplica, [Topic=schedules,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=flights,Partition=3,Replica=1] -> OfflineReplica, [Topic=flights,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=flight_info,Partition=4,Replica=0] -> OnlineReplica, [Topic=flights,Partition=2,Replica=1] -> OfflineReplica, [Topic=flights,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=flight_info,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=schedules,Partition=0,Replica=1] -> OfflineReplica, [Topic=schedules,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OfflineReplica, [Topic=flights,Partition=4,Replica=2] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-07-22 05:58:18,006] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-07-22 05:58:18,018] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-07-22 05:58:18,549] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(flight-0 -> OfflinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, flight_info-3 -> OfflinePartition, schedules-4 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, schedules-0 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, flights-1 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, schedules-3 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OnlinePartition, flight_info-2 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, flights-0 -> OfflinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, flights-4 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OnlinePartition, schedules-2 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, flight_info-1 -> OfflinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, flights-3 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, flight_info-4 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, flight_info-0 -> OfflinePartition, schedules-1 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, flights-2 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-07-22 05:58:18,560] INFO [Controller id=0] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2023-07-22 05:58:18,569] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-07-22 05:58:18,570] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-07-22 05:58:18,570] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-07-22 05:58:18,579] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-07-22 05:58:18,585] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-07-22 05:58:18,636] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-07-22 05:58:21,885] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2023-07-22 05:58:21,886] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-07-22 05:58:21,894] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2023-07-22 05:58:21,906] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-07-22 05:58:21,912] INFO [RequestSendThread controllerId=0] Controller 0 connected to abdelhak:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-22 05:58:22,038] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2023-07-22 05:58:22,044] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 319, 1 -> 403) (kafka.controller.KafkaController)
[2023-07-22 05:58:22,050] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-22 05:58:22,128] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-07-22 05:58:23,638] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-22 05:58:23,638] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-22 05:58:23,650] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap(flights-0 -> List(0, 2, 1), schedules-3 -> List(0, 2, 1), schedules-0 -> List(0, 1, 2), flights-3 -> List(0, 1, 2), flight_info-2 -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2023-07-22 05:58:23,651] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.22727272727272727 (kafka.controller.KafkaController)
[2023-07-22 05:58:23,653] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-22 05:58:23,653] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(schedules-2 -> List(1, 2, 0), flight_info-4 -> List(1, 0, 2), flight_info-1 -> List(1, 2, 0), flights-2 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2023-07-22 05:58:23,653] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.18181818181818182 (kafka.controller.KafkaController)
[2023-07-22 05:58:23,653] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-22 05:58:23,654] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), flight_info-0 -> List(2, 0, 1), __consumer_offsets-47 -> List(2), flight_info-3 -> List(2, 1, 0), __consumer_offsets-38 -> List(2), __consumer_offsets-11 -> List(2), schedules-1 -> List(2, 0, 1), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), schedules-4 -> List(2, 1, 0), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-17 -> List(2), flights-4 -> List(2, 0, 1), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), flights-1 -> List(2, 1, 0), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2)) (kafka.controller.KafkaController)
[2023-07-22 05:58:23,654] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-07-22 05:58:23,654] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-22 05:58:39,864] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2023-07-22 05:58:39,866] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-07-22 05:58:39,874] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2023-07-22 05:58:39,885] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-07-22 05:58:39,899] INFO [RequestSendThread controllerId=0] Controller 0 connected to abdelhak:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-22 05:58:40,054] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2023-07-22 05:58:40,236] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 319, 1 -> 403, 2 -> 437) (kafka.controller.KafkaController)
[2023-07-22 05:58:40,273] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-22 05:58:40,447] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-07-22 05:58:42,912] DEBUG [Controller id=0] Updating ISRs for partitions: Set(schedules-2). (kafka.controller.KafkaController)
[2023-07-22 05:58:42,921] DEBUG [Controller id=0] ISR for partition schedules-2 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2023-07-22 05:58:43,022] DEBUG [Controller id=0] Updating ISRs for partitions: Set(flight_info-3, schedules-3, flight_info-4, schedules-4, flight_info-0, schedules-0, flight_info-1, schedules-1, flight_info-2, flights-0, flights-1, flights-2, flights-3, flights-4). (kafka.controller.KafkaController)
[2023-07-22 05:58:43,076] DEBUG [Controller id=0] ISR for partition flight_info-4 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2023-07-22 05:58:43,079] DEBUG [Controller id=0] ISR for partition flights-0 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2023-07-22 05:58:43,081] DEBUG [Controller id=0] ISR for partition flight_info-3 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 0), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2023-07-22 05:58:43,082] DEBUG [Controller id=0] ISR for partition flights-4 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2023-07-22 05:58:43,082] DEBUG [Controller id=0] ISR for partition schedules-0 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2023-07-22 05:58:43,082] DEBUG [Controller id=0] ISR for partition flights-3 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2023-07-22 05:58:43,082] DEBUG [Controller id=0] ISR for partition flight_info-1 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2023-07-22 05:58:43,082] DEBUG [Controller id=0] ISR for partition flights-2 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2023-07-22 05:58:43,082] DEBUG [Controller id=0] ISR for partition flights-1 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2023-07-22 05:58:43,083] DEBUG [Controller id=0] ISR for partition schedules-4 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2023-07-22 05:58:43,083] DEBUG [Controller id=0] ISR for partition schedules-3 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2023-07-22 05:58:43,083] DEBUG [Controller id=0] ISR for partition flight_info-0 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2023-07-22 05:58:43,083] DEBUG [Controller id=0] ISR for partition flight_info-2 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2023-07-22 05:58:43,083] DEBUG [Controller id=0] ISR for partition schedules-1 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2023-07-22 05:58:43,765] DEBUG [Controller id=0] Updating ISRs for partitions: Set(flight_info-3). (kafka.controller.KafkaController)
[2023-07-22 05:58:43,793] DEBUG [Controller id=0] ISR for partition flight_info-3 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 0, 1), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2023-07-22 05:58:43,865] DEBUG [Controller id=0] Updating ISRs for partitions: Set(schedules-2, schedules-3, flight_info-4, schedules-4, flight_info-0, schedules-0, flight_info-1, schedules-1, flight_info-2, flights-0, flights-1, flights-2, flights-3, flights-4). (kafka.controller.KafkaController)
[2023-07-22 05:58:44,047] DEBUG [Controller id=0] ISR for partition schedules-2 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1, 0), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2023-07-22 05:58:44,048] DEBUG [Controller id=0] ISR for partition flight_info-4 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1, 0), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2023-07-22 05:58:44,048] DEBUG [Controller id=0] ISR for partition flights-0 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1, 0), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2023-07-22 05:58:44,050] DEBUG [Controller id=0] ISR for partition flights-4 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1, 0), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2023-07-22 05:58:44,050] DEBUG [Controller id=0] ISR for partition schedules-0 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1, 0), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2023-07-22 05:58:44,051] DEBUG [Controller id=0] ISR for partition flights-3 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1, 0), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2023-07-22 05:58:44,052] DEBUG [Controller id=0] ISR for partition flight_info-1 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1, 0), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2023-07-22 05:58:44,052] DEBUG [Controller id=0] ISR for partition flights-2 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1, 0), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2023-07-22 05:58:44,054] DEBUG [Controller id=0] ISR for partition flights-1 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1, 0), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2023-07-22 05:58:44,055] DEBUG [Controller id=0] ISR for partition schedules-4 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1, 0), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2023-07-22 05:58:44,055] DEBUG [Controller id=0] ISR for partition schedules-3 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1, 0), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2023-07-22 05:58:44,055] DEBUG [Controller id=0] ISR for partition flight_info-0 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1, 0), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2023-07-22 05:58:44,055] DEBUG [Controller id=0] ISR for partition flight_info-2 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1, 0), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2023-07-22 05:58:44,056] DEBUG [Controller id=0] ISR for partition schedules-1 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1, 0), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
